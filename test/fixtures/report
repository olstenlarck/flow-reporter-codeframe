{"flowVersion":"0.78.0","jsonVersion":"2","errors":[{"kind":"infer","level":"error","suppressions":[],"classic":false,"primaryLoc":{"source":"/home/charlike/tunnckoCore/flow-reporter-codeframe/test/fixtures/example-source/index.js","type":"SourceFile","start":{"line":12,"column":7,"offset":197},"end":{"line":12,"column":15,"offset":206},"context":{"12":"  baz(354345345);"}},"rootLoc":{"source":"/home/charlike/tunnckoCore/flow-reporter-codeframe/test/fixtures/example-source/index.js","type":"SourceFile","start":{"line":12,"column":7,"offset":197},"end":{"line":12,"column":15,"offset":206},"context":{"12":"  baz(354345345);"}},"messageMarkup":[{"kind":"Text","text":"Cannot call "},{"kind":"Code","text":"baz"},{"kind":"Text","text":" with "},{"kind":"Code","text":"354345345"},{"kind":"Text","text":" bound to "},{"kind":"Code","text":"foo"},{"kind":"Text","text":" because "},{"kind":"Reference","referenceId":"1","message":[{"kind":"Text","text":"number"}]},{"kind":"Text","text":" is incompatible with "},{"kind":"Reference","referenceId":"2","message":[{"kind":"Text","text":"string"}]},{"kind":"Text","text":"."}],"referenceLocs":{"1":{"source":"/home/charlike/tunnckoCore/flow-reporter-codeframe/test/fixtures/example-source/index.js","type":"SourceFile","start":{"line":12,"column":7,"offset":197},"end":{"line":12,"column":15,"offset":206},"context":{"12":"  baz(354345345);"}},"2":{"source":"/home/charlike/tunnckoCore/flow-reporter-codeframe/test/fixtures/example-source/baz.js","type":"SourceFile","start":{"line":5,"column":22,"offset":46},"end":{"line":5,"column":27,"offset":52},"context":{"5":"export default (foo: string) => foo.toLowerCase();"}}}},{"kind":"infer","level":"error","suppressions":[],"classic":false,"primaryLoc":{"source":"/home/charlike/tunnckoCore/flow-reporter-codeframe/test/fixtures/example-source/index.js","type":"SourceFile","start":{"line":19,"column":16,"offset":331},"end":{"line":19,"column":29,"offset":345},"context":{"19":"    sub(added, 'sasasasasasa');"}},"rootLoc":{"source":"/home/charlike/tunnckoCore/flow-reporter-codeframe/test/fixtures/example-source/index.js","type":"SourceFile","start":{"line":19,"column":16,"offset":331},"end":{"line":19,"column":29,"offset":345},"context":{"19":"    sub(added, 'sasasasasasa');"}},"messageMarkup":[{"kind":"Text","text":"Cannot call "},{"kind":"Code","text":"sub"},{"kind":"Text","text":" with "},{"kind":"Code","text":"'sasasasasasa'"},{"kind":"Text","text":" bound to "},{"kind":"Code","text":"b"},{"kind":"Text","text":" because "},{"kind":"Reference","referenceId":"1","message":[{"kind":"Text","text":"string"}]},{"kind":"Text","text":" is incompatible with "},{"kind":"Reference","referenceId":"2","message":[{"kind":"Text","text":"number"}]},{"kind":"Text","text":"."}],"referenceLocs":{"1":{"source":"/home/charlike/tunnckoCore/flow-reporter-codeframe/test/fixtures/example-source/index.js","type":"SourceFile","start":{"line":19,"column":16,"offset":331},"end":{"line":19,"column":29,"offset":345},"context":{"19":"    sub(added, 'sasasasasasa');"}},"2":{"source":"/home/charlike/tunnckoCore/flow-reporter-codeframe/test/fixtures/example-source/math.js","type":"SourceFile","start":{"line":10,"column":35,"offset":175},"end":{"line":10,"column":40,"offset":181},"context":{"10":"export function sub(a: number, b: number) {"}}}},{"kind":"infer","level":"error","suppressions":[],"classic":false,"primaryLoc":{"source":"/home/charlike/tunnckoCore/flow-reporter-codeframe/test/fixtures/example-source/math.js","type":"SourceFile","start":{"line":12,"column":24,"offset":236},"end":{"line":12,"column":29,"offset":242},"context":{"12":"  console.log(toString(444444), fo, num);"}},"rootLoc":{"source":"/home/charlike/tunnckoCore/flow-reporter-codeframe/test/fixtures/example-source/math.js","type":"SourceFile","start":{"line":12,"column":24,"offset":236},"end":{"line":12,"column":29,"offset":242},"context":{"12":"  console.log(toString(444444), fo, num);"}},"messageMarkup":[{"kind":"Text","text":"Cannot call "},{"kind":"Code","text":"toString"},{"kind":"Text","text":" with "},{"kind":"Code","text":"444444"},{"kind":"Text","text":" bound to "},{"kind":"Code","text":"foo"},{"kind":"Text","text":" because "},{"kind":"Reference","referenceId":"1","message":[{"kind":"Text","text":"number"}]},{"kind":"Text","text":" is incompatible with "},{"kind":"Reference","referenceId":"2","message":[{"kind":"Text","text":"string"}]},{"kind":"Text","text":"."}],"referenceLocs":{"1":{"source":"/home/charlike/tunnckoCore/flow-reporter-codeframe/test/fixtures/example-source/math.js","type":"SourceFile","start":{"line":12,"column":24,"offset":236},"end":{"line":12,"column":29,"offset":242},"context":{"12":"  console.log(toString(444444), fo, num);"}},"2":{"source":"/home/charlike/tunnckoCore/flow-reporter-codeframe/test/fixtures/example-source/baz.js","type":"SourceFile","start":{"line":5,"column":22,"offset":46},"end":{"line":5,"column":27,"offset":52},"context":{"5":"export default (foo: string) => foo.toLowerCase();"}}}}],"passed":false}